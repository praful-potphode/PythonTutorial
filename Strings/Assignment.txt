1. Write a Python program to calculate the length of a string. Go to the editor


2. Write a Python program to count the number of characters (character frequency) in a string. Go to the editor 
Sample String : google.com'
Expected Result : {'o': 3, 'g': 2, '.': 1, 'e': 1, 'l': 1, 'm': 1, 'c': 1}


3. Write a Python program to get a string made of the first 2 and the last 2 chars from a given a string. If the string length is less than 2, return instead of the empty string. Go to the editor 
Sample String : 'w3resource'
Expected Result : 'w3ce'
Sample String : 'w3'
Expected Result : 'w3w3'
Sample String : ' w'
Expected Result : Empty String 


4. Write a Python program to get a string from a given string where all occurrences of its first char have been changed to '$', except the first char itself. Go to the editor 
Sample String : 'restart'
Expected Result : 'resta$t'


5. Write a Python program to get a single string from two given strings, separated by a space and swap the first two characters of each string. Go to the editor 
Sample String : 'abc', 'xyz' 
Expected Result : 'xyc abz'


6. Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. Go to the editor 
Sample String : 'abc'
Expected Result : 'abcing' 
Sample String : 'string'
Expected Result : 'stringly'


7. Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string. Go to the editor 
Sample String : 'The lyrics is not that poor!'
'The lyrics is poor!'
Expected Result : 'The lyrics is good!'
'The lyrics is poor!'


8. Write a Python function that takes a list of words and returns the length of the longest one. Go to the editor 


9. Write a Python program to remove the nth index character from a nonempty string. Go to the editor


10. Write a Python program to change a given string to a new string where the first and last chars have been exchanged. Go to the editor


11. Write a Python program to remove the characters which have odd index values of a given string. Go to the editor


12. Write a Python program to count the occurrences of each word in a given sentence. Go to the editor


13. Write a Python script that takes input from the user and displays that input back in upper and lower cases. Go to the editor


14. Write a Python program that accepts a comma separated sequence of words as input and prints the unique words in sorted form (alphanumerically). Go to the editor
Sample Words : red, white, black, red, green, black
Expected Result : black, green, red, white,red


15. Write a Python function to create the HTML string with tags around the word(s). Go to the editor
Sample function and result : 
add_tags('i', 'Python') -> '<i>Python</i>'
add_tags('b', 'Python Tutorial') -> '<b>Python Tutorial </b>'


16. Write a Python function to insert a string in the middle of a string. Go to the editor
Sample function and result : 
insert_sting_middle('[[]]<<>>', 'Python') -> [[Python]]
insert_sting_middle('{{}}', 'PHP') -> {{PHP}}


17. Write a Python function to get a string made of 4 copies of the last two characters of a specified string (length must be at least 2). Go to the editor
Sample function and result : 
insert_end('Python') -> onononon
insert_end('Exercises') -> eseseses


18. Write a Python function to get a string made of its first three characters of a specified string. If the length of the string is less than 3 then return the original string. Go to the editor
Sample function and result : 
first_three('ipy') -> ipy
first_three('python') -> pyt


19. Write a Python program to get the last part of a string before a specified character. Go to the editor
https://www.w3resource.com/python-exercises
https://www.w3resource.com/python


20. Write a Python function to reverses a string if it's length is a multiple of 4. Go to the editor


21. Write a Python function to convert a given string to all uppercase if it contains at least 2 uppercase characters in the first 4 characters. Go to the editor


22.Write a Python program to sort a string lexicographically. Go to the editor


23. Write a Python program to remove a newline in Python. Go to the editor


24. Write a Python program to check whether a string starts with specified characters. Go to the editor


25. Write a Python program to create a Caesar encryption. Go to the editor

Note : In cryptography, a Caesar cipher, also known as Caesar's cipher, the shift cipher, Caesar's code or Caesar shift, is one of the simplest and most widely known encryption techniques. It is a type of substitution cipher in which each letter in the plaintext is replaced by a letter some fixed number of positions down the alphabet. For example, with a left shift of 3, D would be replaced by A, E would become B, and so on. The method is named after Julius Caesar, who used it in his private correspondence.



26. Write a Python program to display formatted text (width=50) as output. Go to the editor


27. Write a Python program to remove existing indentation from all of the lines in a given text. Go to the editor


28. Write a Python program to add a prefix text to all of the lines in a string. Go to the editor


29. Write a Python program to set the indentation of the first line. Go to the editor


30. Write a Python program to print the following floating numbers upto 2 decimal places. Go to the editor


31. Write a Python program to print the following floating numbers upto 2 decimal places with a sign. Go to the editor


32. Write a Python program to print the following floating numbers with no decimal places. Go to the editor


33. Write a Python program to print the following integers with zeros on the left of specified width. Go to the editor


34. Write a Python program to print the following integers with '*' on the right of specified width. Go to the editor


35. Write a Python program to display a number with a comma separator. Go to the editor


36. Write a Python program to format a number with a percentage. Go to the editor


37. Write a Python program to display a number in left, right and center aligned of width 10. Go to the editor


38. Write a Python program to count occurrences of a substring in a string. Go to the editor


39. Write a Python program to reverse a string. Go to the editor


40. Write a Python program to reverse words in a string. Go to the editor


41. Write a Python program to strip a set of characters from a string. Go to the editor


42. Write a Python program to count repeated characters in a string. Go to the editor
Sample string: 'thequickbrownfoxjumpsoverthelazydog'
Expected output :
o 4
e 3
u 2
h 2
r 2
t 2


43. Write a Python program to print the square and cube symbol in the area of a rectangle and volume of a cylinder. Go to the editor
Sample output: 
The area of the rectangle is 1256.66cm2
The volume of the cylinder is 1254.725cm3


44. Write a Python program to print the index of the character in a string. Go to the editor
Sample string: w3resource
Expected output:
Current character w position at 0
Current character 3 position at 1
Current character r position at 2
- - - - - - - - - - - - - - - - - - - - - - - - -
Current character c position at 8
Current character e position at 9


45. Write a Python program to check if a string contains all letters of the alphabet. Go to the editor


46. Write a Python program to convert a string in a list. Go to the editor


47. Write a Python program to lowercase first n characters in a string. Go to the editor


48. Write a Python program to swap comma and dot in a string. Go to the editor
Sample string: "32.054,23"
Expected Output: "32,054.23"


49. Write a Python program to count and display the vowels of a given text. Go to the editor


50. Write a Python program to split a string on the last occurrence of the delimiter. Go to the editor


51. Write a Python program to find the first non-repeating character in given string. Go to the editor


52. Write a Python program to print all permutations with given repetition number of characters of a given string. Go to the editor


53. Write a Python program to find the first repeated character in a given string. Go to the editor


54. Write a Python program to find the first repeated character of a given string where the index of first occurrence is smallest. Go to the editor


55.Write a Python program to find the first repeated word in a given string. Go to the editor


56. Write a Python program to find the second most repeated word in a given string. Go to the editor


57.Write a Python program to remove spaces from a given string. Go to the editor


58. Write a Python program to move spaces to the front of a given string. Go to the editor


59. Write a Python program to find the maximum occurring character in a given string. Go to the editor


60. Write a Python program to capitalize first and last letters of each word of a given string. Go to the editor


61. Write a Python program to remove duplicate characters of a given string. Go to the editor


62. Write a Python program to compute sum of digits of a given string. Go to the editor


63. Write a Python program to remove leading zeros from an IP address. Go to the editor


64. Write a Python program to find maximum length of consecutive 0's in a given binary string. Go to the editor


65. Write a Python program to find all the common characters in lexicographical order from two given lower case strings. If there are no common letters print "No common characters". Go to the editor


66. Write a Python program to make two given strings (lower case, may or may not be of the same length) anagrams removing any characters from any of the strings. Go to the editor


67. Write a Python program to remove all consecutive duplicates of a given string. Go to the editor


68. Write a Python program to create two strings from a given string. Create the first string using those character which occurs only once and create the second string which consists of multi-time occurring characters in the said string. Go to the editor


69. Write a Python program to find the longest common sub-string from two given strings. Go to the editor


70. Write a Python program to create a string from two given strings concatenating uncommon characters of the said strings. Go to the editor


71. Write a Python program to move all spaces to the front of a given string in single traversal. Go to the editor


72. Write a Python program to remove all consecutive duplicates from a given string. Go to the editor


73. Write a Python program to count Uppercase, Lowercase, special character and numeric values in a given string. Go to the editor


74. Write a Python program to find the minimum window in a given string which will contain all the characters of another given string. Go to the editor
Example 1
Input : str1 = " PRWSOERIUSFK "
str2 = " OSU "
Output: Minimum window is "OERIUS"


75. Write a Python program to find smallest window that contains all characters of a given string. Go to the editor


76. Write a Python program to count number of substrings from a given string of lowercase alphabets with exactly k distinct (given) characters. Go to the editor


77. Write a Python program to count number of non-empty substrings of a given string. Go to the editor


78. Write a Python program to count characters at same position in a given string (lower and uppercase characters) as in English alphabet. Go to the editor


79. Write a Python program to find smallest and largest word in a given string. Go to the editor


80. Write a Python program to count number of substrings with same first and last characters of a given string. Go to the editor




 


 

 
